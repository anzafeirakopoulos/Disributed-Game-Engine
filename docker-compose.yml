version: '3.7'

services:

  play-master:
    build:
      context:  .
      dockerfile: ./PlayMasterService/Dockerfile
    ports:
      - "6000:6000"
    depends_on:
      - mongoDB
    restart: always
    volumes:
      - ./PlayMasterService:/usr/src/app
    networks:
      - net1
  
  game-master:
    build:
      context:  .
      dockerfile: ./GameMasterService/Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - postgres-gamemaster
    restart: always
    volumes:
      - ./GameMasterService:/usr/src/app
    networks:
      - net1
    

  mongoDB:
    container_name: mongo
    image: mongo
    env_file: ./.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_INITDB_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
      MONGO_INITDB_DATABASE: PlayMaster
    # volumes:
    #   - myMongoDB-data:/data/db
    ports:
      - "27017:27017"
    networks:
     - net1
    logging:
      driver: none

  postgres-gamemaster:
    container_name: sql-gamemaster
    image: postgres
    env_file: ./.env
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: user
      POSTGRES_DB: sql-gm
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - net1
  
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - postgres-gamemaster
    environment:
      PGADMIN_DEFAULT_EMAIL: user@email.com
      PGADMIN_DEFAULT_PASSWORD: pass
    ports:
      - "5050:80"
    networks: 
      - net1
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    logging:
      driver: none
  
  mongo-express:
    container_name: mongo-express
    image: mongo-express:0.54
    restart: always
    ports:
      - 8081:8081
    env_file: ./.env
    environment: 
      ME_CONFIG_MONGODB_ADMINUSERNAME: $MONGO_INITDB_ROOT_USERNAME
      ME_CONFIG_MONGODB_ADMINPASSWORD: $MONGO_INITDB_ROOT_PASSWORD
      ME_CONFIG_MONGODB_SERVER: mongoDB
      ME_CONFIG_BASICAUTH_USERNAME: $ME_CONFIG_BASICAUTH_USERNAME
      ME_CONFIG_BASICAUTH_PASSWORD: $ME_CONFIG_BASICAUTH_PASSWORD
    depends_on: 
      - mongoDB
    networks:
      - net1
    logging:
      driver: none

  mysqldb:
    container_name: sql-auth
    image: mysql:latest
    restart: always
    env_file: ./.env
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
    networks:
      - net1
    volumes: 
      - db-config:/etc/mysql
      - db-data:/var/lib/mysql
      - ./db/backup/files/:/data_backup/data
  
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.0.1
    container_name: phpmyadmin-app
    depends_on:
      - mysqldb
    networks:
      - net1
    ports:
      - "3002:80"
    env_file: ./.env
    environment:
      PMA_HOST: sql-auth
      PMA_PORT: 3306
    #volumes:
    #  - /sessions
    logging:
      driver: none

  authentication:
    build:
      context: .
      dockerfile: ./Authentication_service/Dockerfile
    #command: nodemon -L --inspect=0.0.0.0:4000
    volumes:
      - ./Authentication_service:/usr/src/app
    restart: always
    env_file: ./.env
    environment:
      MYSQL_HOST: sql-auth
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
    depends_on:
      - mysqldb
    ports:
      - 4000:4000
    networks:
      - net1

  user_interface:
    build:
      context: .
      dockerfile: ./User_interface_service/Dockerfile
    volumes:
      - ./User_interface_service:/usr/src/app
    restart: always
    ports:
      - 3000:3000
    networks:
      - net1


networks:
  net1:

volumes: 
  db-config:
  db-data:
  myMongoDB-data:
  PlayMasterService:
  pgdata:
  pgadmin-data:
