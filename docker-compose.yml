version: '3.7'

services:

  game-master:
    
    build:
      context:  .
      dockerfile: ./GameMasterService/Dockerfile
    ports:
      - "5000:8080"
    depends_on:
      - mongo
    restart: always
    volumes:
      - ./GameMasterService:/usr/src/app

  mongo:
    image: mongo
    ports:
      - "27017:27017"

  mongo-express:
    container_name: mongo-express
    image: mongo-express:0.54
    restart: always
    ports:
      - 8081:8081
    environment: 
      ME_CONFIG_MONGODB_ADMINUSERNAME: ""
      ME_CONFIG_MONGODB_ADMINPASSWORD: ""
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: pass
    depends_on: 
      - mongo

  mysqldb:
    container_name: sql-auth
    image: mysql:latest
    restart: always
    env_file: ./.env
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
    networks:
      - net1
    volumes: 
      - db-config:/etc/mysql
      - db-data:/var/lib/mysql
      - ./db/backup/files/:/data_backup/data
  
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.0.1
    container_name: phpmyadmin-app
    depends_on:
      - mysqldb
    networks:
      - net1
    ports:
      - "3002:80"
    env_file: ./.env
    environment:
      PMA_HOST: sql-auth
      PMA_PORT: 3306
    #volumes:
    #  - /sessions

  authentication:
    build:
      context: .
      dockerfile: ./Authentication_service/Dockerfile
    #command: nodemon -L --inspect=0.0.0.0:4000
    volumes:
      - ./Authentication_service:/usr/src/app
    restart: always
    env_file: ./.env
    environment:
      MYSQL_HOST: sql-auth
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
    depends_on:
      - mysqldb
    ports:
      - 4000:4000
    networks:
      - net1

  user_interface:
    build:
      context: .
      dockerfile: ./User_interface_service/Dockerfile
    volumes:
      - ./User_interface_service:/usr/src/app
    restart: always
    ports:
      - 3000:3000
    networks:
      - net1


networks:
  net1:

volumes: 
  db-config:
  db-data:
