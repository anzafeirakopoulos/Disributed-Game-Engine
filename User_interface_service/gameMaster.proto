syntax = "proto3";

package gameMasterPackage;

service gameMaster {

    rpc connectUser(myUser) returns (assignUser);
    rpc joinGame(gameUser) returns (gameUserRDY);
    rpc saveScore(score) returns (status);
    rpc gameHistory(init) returns (status);
    rpc savePlayer(myUser) returns (status);
    rpc getScores(myUser) returns (scores);
    rpc getPracticeHistory(myUser) returns(practiceHistory);
    rpc createTournament(game) returns (newTourn);
    rpc getPlayers(tournament) returns (tournPlayers);
}


message myUser {
    string username = 1;
}

message assignUser {
    bool success = 1;
    string username = 2;
    string text = 3;
}

message voidParam {}

message gameUser {
    string username = 1;
    bool gameCreator = 2;
}

message gameUserRDY {
    bool gameCreator = 1;
    bool gameFound = 2;
    string gameId = 3;
}

message playerMove {
    string username = 1;
    string gameID = 2;
    string source = 3;
    string target = 4;
    bool success = 5;
}

message move {
    string source = 1;
    string target = 2;
    bool success = 3;
}

message player {
    string username = 1;
    string gameID = 2;
}

message turn {
    string gameID = 1;
    int64 turn = 2;
}

message init {
    string gameID = 1;
}

message status {
    bool success = 1;
}

message score {
    string username = 1;
    string gameID = 2;
    float score = 3;
}

message scores {
    bool success = 1;
    float practiceScore = 2;
    float tournamentScore = 3;
}

message practiceHistory {
    bool success = 1;
    repeated Game games = 2;
}

message Game {
    string gameID = 1;
    string player1 = 2;
    string player2 = 3; 
    float player1Score = 4;
    float player2Score = 5;
    string game = 6;
    string type = 7;
    string date = 8;
}

message game {
    string gameType = 1;
}

message newTourn {
    bool success = 1;
    string tournID = 2;
}

message tournament {
    string tournID = 1;
}

message Player{
    string playerName = 1;
    string text = 2;
}

message tournPlayers {
    repeated Player players = 1;
    bool success = 2;
}